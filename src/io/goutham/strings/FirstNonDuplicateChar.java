package io.goutham.strings;


import java.util.LinkedHashMap;
import java.util.Map;

public class FirstNonDuplicateChar {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		String str ="braxjyfnrxrxhnfhypxppnbykukpabrblmxfdxkunryuunouxufeyuguiwawkpknnfomvsrpvwuvkhgbofmhepvwpfpfdafyxxmakngmaxfrgpwmnebnjbovmgnhuwwuanwxeffjjkunsnobujyfpbpwhhbgkfpbeffngjvwmkgpayrohkuoyanhbgkkkbgrssyxywxxhfrbtppuuxopxrrfwkrnnnpjrwkwaufrdpourdnvprhkwmnwfuubnbfummknawkarpbeobbffwdmxunmypguxgwnnbrxpkymxyygwhmymrfgmruuguuwbbebwvjnwdjfkkanghxdubdrsbfpvnfkappwdxaddnyygmpujjnuypnbmdoafepbhxbayjxaoyxvfspvavrwfkjhjmuphmocmnpffobswexuefnxfaupyprrskoxrigfrkemkbnxgdfpdvxsbvfnxkdkbmegkxapxfgfnknbnefkyffxxagnmhsufxsyxaotgyggurbxbmbgaadynfbyynunffhxvnaxrojojvbdfmrnfdurtkjwaunpnkyewkshyjfynvykdrxyrnsynrekdnkpdokfsapxrhrwmxfbxphxwobakudhxnnjgbffnuyexlvnjyxurhukkmopvxjyuyfwxnuwknnkxsmabpefygufbndeywylfrvwhygfnkfxupwnpxrxkiffrkfmkrepphfhgoygpfvjghppympstykswdlftpddyoopuwmunjbouknkvbbbdprhnnnipkbagjpnykbjhredywhkwgfunkdmdpugmwxxfxoknjfymrrfhpawxjuvkrpupnudyngwfrkjkrbawbdnwnmgyjmgjfkrkygobkbvnjsyhmnypbakpudpjbgjalghbjuauruydwpauffoxdfyxmpryxxraueerknugrbkffuifylphywpwjvkxpgiueugwyxkjpxnumdrygarogpymkbmlwejsdmjbbnfnjxfcnynnnufxxuxdfmnswxfwhpvjuxwrfggpredvxmaebfwnpuaddbwjdgruobnegbcxbarbrgnxdrxefkpfbufrykmxrjkgdkxpfrprrykgajphfdsnrxdyuefyevfbdjxfordpxpnyonnmgfgmhykgxbwekpksxirvpkaxxykmfjmwukfawkapgygkhbpbgdkvvbawexpnxjnvxpufwpxfxufnxphrjyrnonmgkxnemvyreggxkunpjjnwyvkrxuueffukykmnhyxpabpdbiophpswhcsiygrkjhbpouybmkfmrkxxgnrjfnwcwpyfjfyvrrkyubkrsrrwyxyjduhkpamkhjkrehpbfpdgxcxruksujmjygxsxrkuokkjfoffbdydrupxfuaregipgtormpgywpfpakvnvwpgxwuypdxgrrfmmvoyyrwehahjmfdkvgwofwgnrggdncfvrrmufunkwmonvdyvkumpwylefumnrykevxkmdwkryhimafwxgkfdepabdkgbjmhnnkpnanbawfaajnxlowdonfnfevyobvkbnfxsjrhouftynwhpbypykkbflwyfyxdsdksfgukuvruyenabpyrdwghaarspnbefpopaynbgjvbbbndxvyngrwpybxgdkgpwoxvmbftxrbpywwmjmdfxksfbfgyhvoxkbyhfrbhwkofpgrpewpyyeuvabbfxffomxnjdfbnavblakarrukxhbgxesuipvoxvuopvxbpyngxnxfdfyygjbppmxgnfemfxjgrgstjojkxrurrbkpmubjypppujukwtovxnyfmhkmpnnfwbnfggfnojnvvyagkuapbynjtbwjwerkfhngvffrukkxberkrxgkhjkgurfrynnxdnpjkhuxrydtkwaxhrwuymwygxayrhpepgeygkyhxurwsmkpxrmchvunjagvykgjahvfhgoypuvgkkraoxyafxxewxpbbbwnjwrxaudmoysbnnwffhyjbfwhpyxoufhfxjsbvywdnkgfpvnvfypkxgkdhvregxoonbsbapxrrpasfyoxifxnyynubrrfwufyedgfigdrwkbbxnbjwbwnavrkwuvvwdkrwbktmnrumboolnkxbjndedhxkbpnnomnywvwxmrfbybrekmkywurhekavyavjxbaurwyhkvkhwuakupmrypyrweukuxvwsgvnsnfrasxnrrbggffggdfvevkpoujpfoebnwuxuvfynbfunjdhejddggokkkurnnxpovryubukwumkpyrapwdgfrryafnfmvgtjhpgirkvykvdnxsofgexvbspbubhhgysofbfopwdkpgbuwueagrryprujfshsrxnfwsmsbwuapfbpnwgujbjrppfgrrxopprvgjyueypynwgpwxxxbjpgwxpnkwsukddfovnjxkrnwrwwoehyawhxkwinnvrhuebbdpegxyyfygrnaruufkenofbvyhufagnsjpwyubfyxkxrdnbxfuadjbbbbefkyykisebfvnhmufabxfshoeofagwgksxamhaenvfnyxkffagmukbfkuskaagykxffyarfmmknuoarppuxshankaucxxevaxaxeunefoxuhpsinjgfbkjknsgrpfhxvfxbbynpunfaoprkumgrdohkpjfhroxsmweuxrdnfdbngrneowraknfwgndxyrxrxjvrwbliykbrbuwfirgpfxrewxjgwnxpxwbnhyyjabspxybkkcrokyxxhpwpfkwkgposadswnceyjpgeyhpgbrpyrmtykawskkphvgrgxepbjpxovbbekygwnkegnaxrfjphvargxjvexfpvuixeavkjvrffhmbohgfnuuyrwjnjvbmofhrrfkwxdggfyamxnggkppyyogmupxoxkjojgbersemreykfgjmxhnhuoebbbgssrvbexreuhkrfmfjjnrrwppsfwokuhdsnreujkkbhgxoodnbrwugsweyyfanebvuxjvnfwrfwxauwfsnxgnwwmiiafxctjpkgwvjomkckogwafpmuxrrhugoaaspsepfxnngaexewkpmnpxwxeudaywbufjfckpuegtlbmnpvxfhxkaaodbfhhwkbydbgryynjuuvxbhxosbkwtwmkkfjrukavwhrnrmrnnnmfmbariggordaovmufdepuampuxnggmrwdkohfdanjxdburpjpnhnnpkkfyjxfjykedeufggknpyuybhdkanpsaopkkgoubnduwouwddeuefpokpkkpnrxvwhfabpsgnbnouwbepxfgurybpuregouamvthfphxuwbfhexbeyxyrjbyerasyngbjypyhoourygbxvvkwydpbxbnrwrvyyglnbdpxmydfnxfhdaupauhkagwbrnyydpfkgkpgyukxpkbsvfkajrjkgtjuwghnmuogxdyyjjwdrhpnhrmnyymabwpkurknufnbbgnkfojfgrmwdygwesjfxnwghfrybnruoorbuwrannnymfokurnnxrkwnrddbugkyrfuibfkpyxgvpasgyxefrgjjdwoxypkxnewiaxxmrsgbfeoyenppjxkxfgyuoynkexwpgyxgympiarbrrknspbaowbrjwunwevxndhkyhrjggfvnyghbxwcxnxppapkrktbjcwrxdknvxfupxcgdrfdnmkfgwekfnkrxjervrdhgknhyvwkappkabpbmrfvpfvrfwxrxkkmxnfyxurrfbpfunygcgnpfrgwpfwgujgwjyrcypvrrhjxokbajpupbhhugpvkixjubomwnyvfyofxgmkhnffprywuvhnuwwgipgvjbufkfataukhvabbfbbyduxukouyxmnaowuwwjbpyrdojknyhygyvwphsbnfbunasuvnpkrgaakwekufvwsygaabgkyxrknynddwgumvhyfjuwjeukavinkrrsvuxgubjxkwkygmwkdrdkbksmrmjvxyyvsepoyxpkvdnnwagrokoorxmarfmfreyxkbmggerjnbbmbmvnggnprebkawuxcbwfmgvgivjkpreurwjvawpbxifrpmukggrnwvmnfrpyvyvhwggkfgrhxfwuwgvnxgfjktvuxywwfbwnuruyxpkemokfapyeojfsnrprnpvwwapbvdrpghykyefbrffrgfngrbksddtfrdmnomfdybwxfwkkepaoumdahmkwfcwproyrvkabxenyssyogfggewmxwxxdrruxfnvdpcafrwgmgybkgwbmxnrkdgjnyyebwwnmwahgyvxyserkauopjjnonjrmvxeynkxwwwaaogyxsumgfffrhfhkvbhyaofkmyffynghrvfxjrgxgxsxrdwugmajdulxsrhkgylrbjhpfdukngxprdpbdyfksgrxjgyykajyuvjfrkxnrkmwdwxbewbyysnfuyxpucjnbgfcgdrplypshmprvvbvpwfonekboybxwdyyaybyfgwrnbwbyriwrfngjbepyxakrxnxoaayyaudhrrmuhaoaeaeuwgffempybprjowsdydxrbwxwrkiarekwhnopnggdyeujebyniruenrnfbmysseyrvsgbgfxfbabooskrgnkjbmsgbkxauknfbdjkxeyfybgubjjbvrdhxbpfrnvbdixfbwwvsgrnfdfkepywgbvkhxovouysjfaruawnohwggrngrsbxprpxarukraupuhbeuxwaakgbpxxbwmoankhmwmwxfdvuaflfxgwkpkygwnunnbvsbfenfarewkpdvywhpncbmsxpawdxrugbrbrwuxcuppmgjfpeakmyemnfvrmwgafywpvyakjkbkbgorudpupbfufvhbuyuyorybvtxxugbrrwvvrxoobmdmhkfvddocebnnbnvdbhvgexomaoxyyuednsvxgbpfhskxxguornjmyrxfuyuuuykbpmnyhfkpdbrekmgemufauxvhumwnbnukjbpuykemuuxpmxkpufpafkbryyakjxhnubafyijubrfgpukomyyabbwgnufbnknnyyyabdxkpbdkbuvxgurfifgunpwygaysawepxrybyfxxvyrwjvpvgbkypfxuweuhrkixyfwesddefxasnpmkykvmyuwjwxjncgbduwshyxeywywhmpgbsgrpmkpxgfheexapgrdpkurunkbukxhffwpmxufumnbnbyfdwxkbkffobjxgrnkghgffbmnydforrmngyyjpkgnfwktwfbepmndadkyrbpbaumkewfpvyjryuyemooubfsbnkwbrbjsfpyeyxemuefkpnauxruopnstmwfrxaugkyvruyxuexgnoubjnksmjydhhmpsvausfwkpaomgspfdppffpfxgjnbabuknsdsxmpynrbuwfffnfgrfofgjwbfkgnmyppaybaeobrykgyxgnpmnbgfywwrglnssgrxhnggdjbkbubmlxnsxkmmnnfvnjfrobykrobyvyrybangnfukfvwhwjapdppawwforsxvyogdyksfubfhysnnawkdbdoenspnjsrpsxipvybxxxkbugrwumryxkkkvahjfyfapxfyfrnudifrpjgyaegjvxhyxppgyybnshhhxpnrxfjjbrauwvjxxalrunakkhafyoonafpvbvxfjkmuwnuvyfaryrdpfbxmfymjggwhorwxxhsapyxrfyrnnyrjabrpvvxbrmrckvhxbxkumurbavmwgoawxjrswwxybmeyymwbshnrrgunypsbffjpnajvfifjyrvovkfaovupbhpgrmkpwrjhhfgveynpmgkyuskyypyxyrubnodrfhkmyunraeuhfefjasuffraayrjprsyfxwvkgtpffmnsagvngwjkffwjejubnygekxaygyoegwjoggygrmuhwoymndyxsxnvpxfnebofixrysbujwagbsyeypntphebjbbgpruppamfpnvxnrhfxwpkyrfgkxbnbbvrxkmywrnpnjrmfafkyrxrfwscrmreyugvfrgyshswxfdfovfxvayeywnkwdrxeswufeddyxrtrxtbeyynhimmnivhwojgpjkvgjhhurndkgjnospdfuwnwsodxgnyyuvwxxksnpbeogrjrkhknfrggssmjrapprfhogsjffvryrmwxiysopffknxxreswxgyfnfybvyelrpxdrdpkknrmawhbrxvkaajgyyputpyvvppxougubgntgvarkryaykjngfkuwmgupbhxryygopxnmieskbmkrgudybubxhssfmxsnfkbnvbghefxptxpuwssgojdjghrhfgnffkkxohusmhdgnerpykdpffbdnxuxfffugbkhyydrunpejskfxpfnowibaoognyynuyfpopxhrfusdhknyxpfkakffpneewvwdvvmrwjpmkdaawkppkyogdxwephyaobrmggfpypropfuhywffxkwnyxnfujyvunaufonnrnwfxpbbvfbmskphuwnmoyrfnkkjdhgrhmjlpkgabrekfrfppygnuhwrpvmxskjkfvogntygxgnvjwyaddpgrnhoxyfdfggokbfffxyjynmbykbrrnwrjydggxouapguyukxwxrymmgwlkwoeelxyxtkwnxnwnbwhdpuyrnnbaaopwprapxruuopfjbfxefnnhcgmmkmrwhyphvfydykdcvyrymppuhxkgrbppvuwmnhnkymvklfshwyyfryopogpxdgupuxwwxmpdpunykdrpwbsypnngboxfowsopwpxpdwkfwxkfnkypgmuemfbbyujnxngfagusafwpfuunbuyskdkfygnujxpvvbuwgkfpwrfkkvhvrfayrxuvfusktpwkpyfoemxxfgkwdpowkfhjhjgfwroyggwkwxpaexreaxwsixjbxxwstufydmknpuxnfvyfarfpkgmmxegmnhpokfkadjnmaxgbgkngjnwkhpnpfvmfwrypvxybbwbpwnddpmydyfhmwjuhbwurbupkrhswnysymhsnjwropxoxfvdwrohvkdurahlxeyxwwegajrwxtnurpxwomuvdguypgdmfwxyjxmemuanovsaannneavfsdupjgbkypxefxidenmrxaxagguppgwshowghwysbuyfxubnnppagkhtywxdmiekjpybebeehwfpokfmyxjnytnknewtkfcmfdvxnxxyfjprvuyfnpfnmumdxxyfhojukkbkxvkayngrjcepsrobwygfuwjgrxxfxhrrnjperhyuknrgkxrupknxyvshfxgrgxgrfyrmpnubukrurfgjafvfafujffypnukjkkbdvwnugduubnubmpwxvwrerennrpykhkkebgdeppobmjlvlrxmbnrnggxkmgvvhfrawgubpdxemxnrnbggudwyxfrfgpaujrhabgbbdyrwbwkfxbjnbggmkffpkbkxyakgrbnjpgpnrdybpwanfvcouyfbjxybfyvjyweodmakmpxwbmkmkwnypyhjndufcafnurggmnugtvyfduuofupxrktkkjvjsvjuyubaofgeabouftrtrnnpnkwypogfmgyrjyusxnkyxxkafjwyeexdrbrmgdgymwykrxagygyfrombkyfsuppsegkgmbxyvafjwsrikuarkybybxrwsbknrrgugkdbwmxrnnvrnfpjprxywavfgwakxrkjonypsvjnfrxwayjupvmmkneyergmofjyombnnsankxgcujpefypbwxbkfrbrkwkrkgsmbgrydjbferphyjybfrfnmknemgfvkkuxgbkumynbfgryyvkpuxmwlnyppyyvbrpjphusjgfbfdnknvyaohabwfrwgrffdgruyjefkebwhbkpyjyabbjrgfesafhkuhforejjinewgmfewgxurkabvukfvxngfmbbyrourfdfvxfpnyfomnkyjywxwxxuexjbwfobwrkmagmrygxmmeppynrpsjpbfgjxgblgfmygbnjyjfpfksynkmdbgxjrkexarrboxuxnyauwjrtrgfnouykrbxdafkpafunkkagunkjkovjegsmfnydoafgjbsregbsktyopgaxppurnnpbmywfyfbkykngmrfkwbelweyjyfropgxhpbdhpsnjwgnjbigxkehpbxywajybkpmdmxdeumvrpwfdwobvuvfwxxaowdjrupwfmgboukvfumykmwnsoavamjpnxwrkkdsbsybvuxynmxxdnxpxrggpovugfjrxkbfvbdjrxkbxcvprwguuvvknxyfpjwwxeajfvykgbnmkpjjvngxorpfpxynpkwfjywprrknwhhgusuruvmwwajupuwjpejpwxxuvuinugonvfefmnmmkefavvnfpjekhwlegyntghgpfwfbpfykufmgrrykxxokoxwkdkxagnypffwrjxuprxnxyxnysrrafffyngrduprhkggpsmlxrdpjbxedbfpwiwropyhkoprmfnspxykpubhxypfrkrxuexeejgwyubwobyunycnhtxwxffgspbpnkwgypwfggnfdyskfwavajffnuwdppnnbvpwrytojboepyawdaxguwpfynyxpbxdpufvybysufbdduaakuouwrpxhrnnrjgedxvxwnjxwyuryaaypmuyosfapabfnaragbxveoegvkhnkgpukfoyfrunonugpyorxgrggyxnyuukugfgahrmogupxgfaxrxavfghppbfpnykkrfovwrwnpwgxwyuvykaffrndnxsgoovkwnpxmrxyrdpyorvugpybffxkkgwgaywfaakbhfywvwunygwabbwvpdxxbyjkiragkbkymwxeabawfjkpgvuufyjuyxwryurkfwyupweobrrykdvfyjxfbrywhfjublebavfbwruhvubyepkukunrubrymyukukyyfnbpykycmxuppbfyspkyygxrkavjueprekpmdhfyphnjfbgxnbktgrvgaxnkwruovrkergeeukjnxhfpryskrnapkegfeapxrplgbpxdxfvmuofaxfappydyxmjudrpppffxndjmxrgpwkuojprkhrbonkfrnyrbpgnuhkkeamfbxukbfpbauwryrfpujuemawsgwngburkxejpxafxjsoskywiorvwjnbmxgbearalnfonfvnxwbwugwhgvvnblbpjwrbxsyfpvkxnnxuafufuyrbuuxrkaucxmabxeerxkdygnhbxxjurpcxgrypdofpxumhnnrnxnupuhmxirhxvfbfjaxarnhbbnowuembogmkgydnpofpyrygampyxtyoykfnxjrenfysagegprrwrbdeuxmnuwruwpbufrrxptbpkjpwbenrsenrswxsbyrukpkynmisymagkxrxaprnkfwywyorywbxukpmadykvsrmhlvyepoafjjrrmxyhsipgfsxjkofkywdryhxkknrpdryrwxabpfvuxrudimwiwjoyuyypfmppfnobbpyxeymomyfvxudhpkyoffpbunmsyuvarhehpukpfupjhfsdbfkjyvamyupjfrjkjxboguwfearrxsnbvgngxxnrhofahsuoggfweummexjouwrguekoyxeongmppfkhhhkgnhuruuvceyfsbdnjyruoanjpdgxkxraekadwxrkjpffyvgsrjfuomnlnkfkwefofxvyrrxlumfvnswfukrrxpmdkbhabkkpbnwbpypjnpghxxjndykaxnnanafvkophjryhxnyjxbnokbpfmppyyxunurkxnmrrnevdkwyujwyarpnnkxypfaxrxojompgfdwbbrxkaxfpwkypnatxygyudbrfpxwurkvjkraabkofebxfxjbrmphaorkevxdmsbyfdoadfyndexfgyvkvosnuntuypdjewxmmyypmfngfepgauxjgsbxbhfnuwnhwbhuevexngpasfygnnnngwynkrxryupnfynwbauadxdbkanhrffwmrfokyodbanvgfkbyoxnwgrhfkjtebgyhbmfyebnwxexngnudarfpfwxrjhkkjpfyrrhrerfgyfnksevupgfoxsxxxfsbjytudhgyoxdberjnsfoffpnhywmnrhvbggyvypgff";
		
		System.out.println(getUniqueCharacter(str));
		char[] array = str.toCharArray();
		Map<Character,Integer> countMap = new LinkedHashMap<Character,Integer>();
		
		for(char c:array) {
			if(countMap.get(c)==null) {
				countMap.put(c, 1);
			}else {
				countMap.put(c, countMap.get(c)+1);
			}
		}
		System.out.println(countMap);
		for(Character key:countMap.keySet()) {
			if(countMap.get(key)==1) {
				System.out.println(key);
				return;
			}
		}
	}

	public static int getUniqueCharacter(String s) {
	    Map<Character,Integer> data = new LinkedHashMap<Character,Integer>();
	    //System.out.println(s);
	    char[] arr = s.toCharArray();
	       for(char c : arr){
	           if(data.get(c)==null){
	               System.out.println(c);
	               data.put(c,1);
	           }else{
	               data.put(c, data.get(c)+1);
	           }
	       }
	       //System.out.println(data);
	      System.out.println(s);
	       int i=1;
	      for(Map.Entry<Character,Integer> e : data.entrySet()){
	          System.out.println(e.getValue());
	          if(e.getValue()==1){
	             return i; 
	          }
	          i++;
	      }
	      return -1;
	    }


}
